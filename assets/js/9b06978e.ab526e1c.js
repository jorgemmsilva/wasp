(self.webpackChunkdoc_ops=self.webpackChunkdoc_ops||[]).push([[2385],{2331:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),s=["components"],c={},i="Sending tokens to the smart contract",l={unversionedId:"tutorial/09",id:"tutorial/09",isDocsHomePage:!1,title:"Sending tokens to the smart contract",description:"Let's send some tokens to the smart contract. The following example deploys the",source:"@site/docs/tutorial/09.md",sourceDirName:"tutorial",slug:"/tutorial/09",permalink:"/docs/tutorial/09",editUrl:"https://github.com/iotaledger/chronicle.rs/tree/main/docs/docs/tutorial/09.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Accounts: deposit and withdraw tokens",permalink:"/docs/tutorial/08"},next:{title:"Return of tokens in case of failure",permalink:"/docs/tutorial/10"}},u=[],p={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sending-tokens-to-the-smart-contract"},"Sending tokens to the smart contract"),(0,a.kt)("p",null,"Let's send some tokens to the smart contract. The following example deploys the\nfamiliar ",(0,a.kt)("inlineCode",{parentName:"p"},"example1")," Rust/Wasm smart contract on the chain and sends 42 iota to it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'func TestTutorial6(t *testing.T) {\n    env := solo.New(t, false, false, seed)\n    chain := env.NewChain(nil, "ex6")\n\n    err := chain.DeployWasmContract(nil, "example1", "example_tutorial_bg.wasm")\n    require.NoError(t, err)\n\n    contractAgentID := iscp.NewAgentID(chain.ChainID.AsAddress(), iscp.Hn("example1"))\n\n    userWallet, userAddress := env.NewKeyPairWithFunds(env.NewSeedFromIndex(5))\n    userAgentID := iscp.NewAgentID(userAddress, 0)\n\n    env.AssertAddressBalance(userAddress, colored.IOTA, solo.Saldo)\n    chain.AssertAccountBalance(contractAgentID, colored.IOTA, 0) // empty on-chain\n    chain.AssertAccountBalance(userAgentID, colored.IOTA, 0)     // empty on-chain\n\n    req := solo.NewCallParams("example1", "storeString", "paramString", "Hello, world!").WithIotas(42)\n    _, err = chain.PostRequestSync(req, userWallet)\n    require.NoError(t, err)\n\n    chain.AssertAccountBalance(contractAgentID, colored.IOTA, 42)\n    chain.AssertAccountBalance(userAgentID, colored.IOTA, 0)\n    env.AssertAddressBalance(userAddress, colored.IOTA, solo.Saldo-42)\n}\n')),(0,a.kt)("p",null,"The statements"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},'    req := solo.NewCallParams("example1", "storeString", "paramString", "Hello, world!").WithIotas(42)\n    _, err = chain.PostRequestSync(req, userWallet)\n')),(0,a.kt)("p",null,"attach 42 iotas to the ordinary call to the ",(0,a.kt)("inlineCode",{parentName:"p"},"storeString")," entry point.\n",(0,a.kt)("inlineCode",{parentName:"p"},"PostRequestSync")," sends the request with the iotas to the smart contract. The 42\niotas appear in the account controlled by the smart contract on its chain."),(0,a.kt)("p",null,"So, what does the ",(0,a.kt)("inlineCode",{parentName:"p"},"example1")," smart contract do with these 42 iotas? Nothing!\nHowever, the creator of the smart contract (and nobody else) may withdraw those\niotas to its own address by sending a ",(0,a.kt)("inlineCode",{parentName:"p"},"withdrawIotas")," request."),(0,a.kt)("p",null,"What if we send some other colored tokens, not iotas, to the ",(0,a.kt)("inlineCode",{parentName:"p"},"example1"),"\nsmart contract? They will effectively be lost, because the programmer of\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"example1")," smart contract didn't implement a way to deal with colored\ntokens."))}d.isMDXComponent=!0},3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,h=d["".concat(i,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(h,s(s({ref:t},u),{},{components:n})):r.createElement(h,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var l=2;l<a;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);